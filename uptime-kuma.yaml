apiVersion: v1
kind: PersistentVolume
metadata:
  name: uptime-kuma-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2  # Ensure this matches the PVC storageClassName
  hostPath:
    path: "/mnt/data/uptime-kuma"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptime-kuma-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
  volumeName: uptime-kuma-pv

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  serviceName: uptime-kuma-service  # Required field
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
      - name: uptime-kuma
        image: louislam/uptime-kuma:1
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /app/data
          name: uptime-kuma-storage
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 2
      volumes:
      - name: uptime-kuma-storage
        persistentVolumeClaim:
          claimName: uptime-kuma-pvc  # Use the pre-created PVC directly

---
apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma-service
  namespace: uptime-kuma
spec:
  selector:
    app: uptime-kuma
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma-ingress
  namespace: uptime-kuma
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: your-cert-arn
    alb.ingress.kubernetes.io/group.name: your-alb-name
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
spec:
  rules:
    - host: example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: uptime-kuma-service
                port:
                  number: 3000
